---
- name: Install selinux dependencies when selinux is installed
  become: true
  ansible.builtin.package:
    name: "{{ ssh_selinux_dependency_packages }}"
    state: present

- name: Authorize ports for selinux > {{ ssh_server_ports }}
  become: true
  community.general.seport:
    ports: "{{ ssh_server_ports }}"
    proto: tcp
    setype: ssh_port_t
    state: present

- name: Check if ssh_password module is already installed
  become: true
  register: ssh_password_module
  failed_when: false
  changed_when: false
  check_mode: false
  args:
    executable: /bin/bash
  ansible.builtin.shell:
    cmd: set -o pipefail && semodule -l | grep ssh_password

# The following tasks only get executed when selinux is in state enforcing, UsePam is 'no' and the ssh_password module is installed.
# See this issue for more info: https://github.com/hardening-io/ansible-ssh-hardening/issues/23
- name: Enforce selinux configuration
  when: not ssh_use_pam | bool and ssh_password_module.stdout.find('ssh_password') != 0
  block:
    - name: Create selinux custom policy drop folder
      become: true
      ansible.builtin.file:
        path: "{{ ssh_custom_selinux_dir }}"
        state: directory
        owner: root
        group: root
        mode: 0750

    - name: Distributing custom selinux policies
      become: true
      ansible.builtin.copy:
        src: ssh_password
        dest: '{{ ssh_custom_selinux_dir }}'
        mode: 0640

    - name: Check and compile policy
      become: true
      register: _checkmodule
      changed_when: _checkmodule.rc != 0
      ansible.builtin.command:
        cmd: checkmodule -M -m -o {{ ssh_custom_selinux_dir }}/ssh_password.mod {{ ssh_custom_selinux_dir }}/ssh_password

    - name: Create selinux policy module package
      become: true
      register: _semodule_package
      changed_when: _semodule_package.rc != 0
      ansible.builtin.command:
        cmd: semodule_package -o {{ ssh_custom_selinux_dir }}/ssh_password.pp  -m {{ ssh_custom_selinux_dir }}/ssh_password.mod

    - name: Install selinux policy
      become: true
      register: _semodule
      changed_when: _semodule.rc != 0
      ansible.builtin.command:
        cmd: semodule -i {{ ssh_custom_selinux_dir }}/ssh_password.pp

# The following tasks only get executed when selinux is installed, UsePam is 'yes' and the ssh_password module is installed.
# See http://danwalsh.livejournal.com/12333.html for more info
- name: Remove selinux-policy when Pam is used, because Allowing sshd to read the shadow file directly is considered a potential security risk
  become: true
  register: _remove_selinux_policy
  when: ssh_use_pam | bool and ssh_password_module.stdout.find('ssh_password') == 0
  ansible.builtin.command:
    cmd: semodule -r ssh_password
  failed_when: "_remove_selinux_policy.rc != 0"
  changed_when: "_remove_selinux_policy.rc == 0"
